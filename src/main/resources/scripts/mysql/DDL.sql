CREATE DATABASE IF NOT EXISTS DECARDO;

USE DECARDO;

CREATE TABLE IF NOT EXISTS USER
(
    ID            INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME      VARCHAR(255)           NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR(255)           NOT NULL,
    ROLE          ENUM ('user', 'admin') NOT NULL,
    DETAILS       TEXT
);

CREATE TABLE IF NOT EXISTS WORK
(
    ID          INT PRIMARY KEY AUTO_INCREMENT,
    TITLE       VARCHAR(255)                        NOT NULL,
    AUTHOR_ID   INT                                 NOT NULL,
    DESCRIPTION TEXT                                NOT NULL,
    CREATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    FILE_URL    VARCHAR(255)                        NOT NULL,
    FOREIGN KEY (AUTHOR_ID) REFERENCES USER (ID)
);


CREATE TABLE IF NOT EXISTS WORK_REFERENCE
(
    WORK_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    PRIMARY KEY (WORK_ID, USER_ID),
    FOREIGN KEY (WORK_ID) REFERENCES WORK (ID),
    FOREIGN KEY (USER_ID) REFERENCES USER (ID)
);

CREATE TABLE IF NOT EXISTS COMMENT
(
    WORK_ID      INT                                 NOT NULL,
    USER_ID      INT                                 NOT NULL,
    COMMENT_TEXT TEXT                                NOT NULL,
    COMMENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (WORK_ID, USER_ID),
    FOREIGN KEY (WORK_ID) REFERENCES WORK (ID),
    FOREIGN KEY (USER_ID) REFERENCES USER (ID)
);

CREATE TABLE IF NOT EXISTS RATING
(
    WORK_ID      INT                                 NOT NULL,
    USER_ID      INT                                 NOT NULL,
    RATING_VALUE INT                                 NOT NULL,
    RATING_DATE  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (WORK_ID, USER_ID),
    FOREIGN KEY (WORK_ID) REFERENCES WORK (ID),
    FOREIGN KEY (USER_ID) REFERENCES USER (ID)
);

DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS RATING;
DROP TABLE IF EXISTS WORK_REFERENCE;
DROP TABLE IF EXISTS WORK;
DROP TABLE IF EXISTS USER;

